_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[19],{"+0M/":function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/2015-04-15-go-for-node-developers",function(){return o("lj6W")}])},lj6W:function(e,t,o){"use strict";o.r(t),o.d(t,"meta",(function(){return c})),o.d(t,"default",(function(){return h}));var n=o("rePB"),a=o("Ff2n"),i=(o("q1tI"),o("7ljp")),r=o("hOk3");function s(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?s(Object(o),!0).forEach((function(t){Object(n.a)(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}var c={title:"Go for Node developers",description:"I'm developing Node apps for years and started working with Go last  month. So far, I like it as much as I like Node. So I hope to blog some  quick tips about Go (aka Golang) for Node developers starting with the  $GOPATH. I'll start with some boring stuff and quickly move on to  something useful. If you haven't tried go yet, [this](https://golang.org/doc/code.html) is a good page to start.",intro:Object(i.a)("section",null,Object(i.a)("p",null,"I'm developing Node apps for years and started working with Go last  month. So far, I like it as much as I like Node. So I hope to blog some  quick tips about Go (aka Golang) for Node developers starting with the  $GOPATH. I'll start with some boring stuff and quickly move on to  something useful. If you haven't tried go yet, [this](https://golang.org/doc/code.html) is a good page to start.")),date:"2015-04-15",tags:["node","go"]},p={meta:c},d=Object(r.a)({meta:c});function h(e){var t=e.components,o=Object(a.a)(e,["components"]);return Object(i.a)(d,l(l(l({},p),o),{},{components:t,mdxType:"MDXLayout"}),Object(i.a)("p",null,"I'm developing Node apps for years and started working with Go last  month. So far, I like it as much as I like Node. So I hope to blog some  quick tips about Go (aka Golang) for Node developers starting with the  $GOPATH. I'll start with some boring stuff and quickly move on to  something useful. If you haven't tried go yet, ",Object(i.a)("a",l({parentName:"p"},{href:"https://golang.org/doc/code.html"}),"this")," is a good page to start."),Object(i.a)("h2",null,"The $GOPATH"),Object(i.a)("p",null,"It's sort of like ",Object(i.a)("strong",{parentName:"p"},"one path to rule them all")," solution. All your Go projects and their dependencies go here. This is a  bit different from node_modules. The $GOPATH contains following  directories."),Object(i.a)("pre",null,Object(i.a)("code",l({parentName:"pre"},{}),"bin/  # compiled binaries\npkg/  # compiled non-binary packages\nsrc/  # package source files\n\n")),Object(i.a)("p",null,"And there are several approaches to managing the $GOPATH."),Object(i.a)("h3",null,"Per-app $GOPATH"),Object(i.a)("p",null,"This is the way I tried first because it was similar to having a  node_modules directory. Your project would look something like this."),Object(i.a)("pre",null,Object(i.a)("code",l({parentName:"pre"},{}),"bin/\npkg/\nsrc/\n  app/         # app source files\n    main.go\n    ...\n  github.com/  # dependencies\n  ...\n\n")),Object(i.a)("p",null,"When checking into a repo, add the complete $GOPATH with all dependencies. Add the ",Object(i.a)("inlineCode",{parentName:"p"},"bin")," and ",Object(i.a)("inlineCode",{parentName:"p"},"pkg")," directories to your .gitignore file. This way you will have all your  dependency versions fixed. The bad side of this approach is that you'll  have to set the $GOPATH environment variable quite a lot. This can get  pretty annoying. And you may work with an incorrect $GOPATH by mistake."),Object(i.a)("h3",null,"Global $GOPATH"),Object(i.a)("p",null,"Others use a common $GOPATH for all their projects. Dependencies are  usually kept to their latest versions. I know this sounds like  installing everything globally with npm. Anyways, it's not as bad as it  would be if we're doing this with Node. Mostly because Go applications  wouldn't have many external dependencies (compare that to Node)."),Object(i.a)("pre",null,Object(i.a)("code",l({parentName:"pre"},{}),"bin/\npkg/\nsrc/\n  github.com/\n    username/\n      app-1/\n        main.go\n        ...\n      app-2/\n        main.go\n        ...\n\n")),Object(i.a)("p",null,"I'm not really feeling comfortable with mixing everything but it  usually gets the job done. If you're starting with Go, don't waste time  worrying about versions and go ahead with a common $GOPATH."),Object(i.a)("h3",null,"Global $GOPATH with Godeps"),Object(i.a)("p",null,"Another way to manage dependencies is vendoring. It can be done  easily with Godep. With Godeps you can create a snapshot of all your  dependencies. This successfully freezes dependencies to the exact  version. It also saves a copy of all dependencies so you don't need to  worry if the author takes the repo down (... maybe you should)."),Object(i.a)("p",null,Object(i.a)("a",l({parentName:"p"},{href:"http://godoc.org/github.com/tools/godep"}),"More about Godep")))}h.isMDXComponent=!0}},[["+0M/",0,1,2]]]);