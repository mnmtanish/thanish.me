_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[31],{hV4S:function(e,n,t){"use strict";t.r(n),t.d(n,"meta",(function(){return l})),t.d(n,"default",(function(){return f}));var r=t("rePB"),a=t("Ff2n"),i=(t("q1tI"),t("7ljp")),c=t("hOk3");function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){Object(r.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var l={title:"FabricJS performance hack",description:"The frame rate can be improved by only rendering inside a rAF callback.",intro:Object(i.a)("section",null,Object(i.a)("p",null,"The frame rate can be improved by only rendering inside a rAF callback.")),date:"2017-05-17",tags:["js","canvas"]},p={meta:l},b=Object(c.a)({meta:l});function f(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.a)(b,s(s(s({},p),t),{},{components:n,mdxType:"MDXLayout"}),Object(i.a)("p",null,"The frame rate can be improved by only rendering inside a rAF callback."),Object(i.a)("pre",null,Object(i.a)("code",s({parentName:"pre"},{className:"language-js"}),"let isRendering = false;\nlet isAnimating = false;\n\nconst render = canvas.renderAll.bind(canvas);\nconst stop = () => isAnimating = false;\nconst play = () => {\n    isAnimating = true;\n    canvas.renderAll();\n};\n\ncanvas.renderAll = () => {\n    if (!isRendering) {\n        isRendering = true;\n        requestAnimationFrame(() => {\n            render();\n            isRendering = false;\n            if (isAnimating) {\n                canvas.renderAll();\n            }\n        });\n    }\n};\n")),Object(i.a)("p",null,"I started working with FabricJS this week so there\u2019s a big chance things might break. I couldn\u2019t find any place this might break after going through the canvas.renderAll method source code but this needs more tests before it can be used in any project. Here\u2019s screenshots of profiles before and after applying the hack on an example scene."),Object(i.a)("img",{src:"/_next/static/images/776027c2baebc19cb03f8ffa19ddad5b.png",alt:"Screenshot of the profile before applying the\xa0hack"}),Object(i.a)("img",{src:"/_next/static/images/88758f6fe2e021007bd3f8a5ba6d35e0.png",alt:"Screenshot of the profile after applying the\xa0hack"}),Object(i.a)("p",null,"The frame rate can be improved further by running requestAnimationFrame in a loop ( example: using the play function in the gist )."),Object(i.a)("p",null,'{{< figure src="/imported/1-3Wu64u6UyaUPH7NIxJtC6A.png" >}}'),Object(i.a)("p",null,"Even if this hack works, you\u2019ll need to do customize the hack depending on your application. Like I said, I\u2019ve only started using FabricJS this week so if there\u2019s something wrong with the code, please let me know with a comment."))}f.isMDXComponent=!0},mX1z:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/2017-05-17-fabricjs-performance-hack",function(){return t("hV4S")}])}},[["mX1z",0,1,2]]]);